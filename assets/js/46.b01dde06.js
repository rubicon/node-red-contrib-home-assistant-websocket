(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{475:function(t,e,a){"use strict";a.r(e);var s=a(18),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"events-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events-state"}},[t._v("#")]),t._v(" Events: state")]),t._v(" "),a("p",[t._v("Outputs state_changed event types sent from Home Assistant")]),t._v(" "),a("p",[t._v("The autocomplete will open to allow easier selection in the case you want a specific entity however the actual match is a substring match so no validation is done")]),t._v(" "),a("h2",{attrs:{id:"configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration:")]),t._v(" "),a("h3",{attrs:{id:"entity-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entity-id"}},[t._v("#")]),t._v(" Entity ID "),a("Badge",{attrs:{text:"required"}})],1),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("string|regex")])])]),t._v(" "),a("p",[t._v("matches for entity_id field")]),t._v(" "),a("h3",{attrs:{id:"entity-id-filter-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entity-id-filter-types"}},[t._v("#")]),t._v(" Entity ID Filter Types "),a("Badge",{attrs:{text:"required"}})],1),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("Values: "),a("code",[t._v("exact|substring|regex")])]),t._v(" "),a("li",[t._v("Default: "),a("code",[t._v("exact")])])]),t._v(" "),a("p",[t._v("Substring can be a comma-delimited list.")]),t._v(" "),a("h3",{attrs:{id:"if-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-state"}},[t._v("#")]),t._v(" If State")]),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("string")])])]),t._v(" "),a("p",[t._v("If the conditional is evaluated as true send the message to the first output otherwise send it to the second output. If blank there will only be one output.")]),t._v(" "),a("p",[a("strong",[t._v("Also see:")])]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/guide/conditionals.html"}},[t._v("Conditionals")])],1)]),t._v(" "),a("h3",{attrs:{id:"for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for"}},[t._v("#")]),t._v(" For")]),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("number")])])]),t._v(" "),a("p",[t._v("An amount of time an entity's state needs to be in that state before triggering.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("Output on Connect state changes will not start a timer.")])]),t._v(" "),a("h3",{attrs:{id:"state-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#state-type"}},[t._v("#")]),t._v(" State Type")]),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("string")])]),t._v(" "),a("li",[t._v("Values: "),a("code",[t._v("string|number|boolean")])]),t._v(" "),a("li",[t._v("Default: "),a("code",[t._v("string")])])]),t._v(" "),a("p",[t._v("Convert the state of the entity to the selected type. Boolean will be converted to true based on if the string is equal by default to ("),a("code",[t._v("y|yes|true|on|home|open")]),t._v("). Original value stored in msg.data.original_state")]),t._v(" "),a("h3",{attrs:{id:"ignore-state-change-event"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignore-state-change-event"}},[t._v("#")]),t._v(" Ignore state change event")]),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("boolean")])])]),t._v(" "),a("p",[t._v("A list of possible states that will be ignore if seletected.")]),t._v(" "),a("h3",{attrs:{id:"output-on-connect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-on-connect"}},[t._v("#")]),t._v(" Output on Connect")]),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("boolean")])])]),t._v(" "),a("p",[t._v("Output once on startup/deploy")]),t._v(" "),a("h3",{attrs:{id:"expose-to-home-assistant"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expose-to-home-assistant"}},[t._v("#")]),t._v(" Expose to Home Assistant")]),t._v(" "),a("ul",[a("li",[t._v("Type: "),a("code",[t._v("boolean")])])]),t._v(" "),a("p",[t._v("Creates a switch within Home Assistant to enable/disable this node. This feature requires "),a("a",{attrs:{href:"https://github.com/zachowj/hass-node-red",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node-RED custom integration"),a("OutboundLink")],1),t._v(" to be installed in Home Assistant")]),t._v(" "),a("h2",{attrs:{id:"outputs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outputs"}},[t._v("#")]),t._v(" Outputs")]),t._v(" "),a("p",[t._v("Value types:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("event data")]),t._v(": full event object")]),t._v(" "),a("li",[a("code",[t._v("entity id")]),t._v(": entity id of the triggered entity")]),t._v(" "),a("li",[a("code",[t._v("entity state")]),t._v(": entity state of the triggered entity")]),t._v(" "),a("li",[a("code",[t._v("config")]),t._v(": config properties of the node")])])])}),[],!1,null,null,null);e.default=i.exports}}]);